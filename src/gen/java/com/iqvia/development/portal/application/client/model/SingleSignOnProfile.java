/*
 * WSO2 Identity Server - Application Management Rest API
 * This document specifies a **Application Management RESTful API** for **WSO2 Identity Server** . 
 *
 * OpenAPI spec version: v1
 * Contact: architecture@wso2.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.iqvia.development.portal.application.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.iqvia.development.portal.application.client.model.SAMLAssertionConfiguration;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * SingleSignOnProfile
 */


public class SingleSignOnProfile {
  /**
   * Gets or Sets bindings
   */
  @JsonAdapter(BindingsEnum.Adapter.class)
  public enum BindingsEnum {
    HTTP_POST("HTTP_POST"),
    HTTP_REDIRECT("HTTP_REDIRECT"),
    ARTIFACT("ARTIFACT");

    private String value;

    BindingsEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static BindingsEnum fromValue(String text) {
      for (BindingsEnum b : BindingsEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<BindingsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final BindingsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public BindingsEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return BindingsEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("bindings")
  private List<BindingsEnum> bindings = null;

  @SerializedName("enableSignatureValidationForArtifactBinding")
  private Boolean enableSignatureValidationForArtifactBinding = false;

  @SerializedName("attributeConsumingServiceIndex")
  private String attributeConsumingServiceIndex = null;

  @SerializedName("enableIdpInitiatedSingleSignOn")
  private Boolean enableIdpInitiatedSingleSignOn = false;

  @SerializedName("assertion")
  private SAMLAssertionConfiguration assertion = null;

  public SingleSignOnProfile bindings(List<BindingsEnum> bindings) {
    this.bindings = bindings;
    return this;
  }

  public SingleSignOnProfile addBindingsItem(BindingsEnum bindingsItem) {
    if (this.bindings == null) {
      this.bindings = new ArrayList<>();
    }
    this.bindings.add(bindingsItem);
    return this;
  }

   /**
   * Get bindings
   * @return bindings
  **/
  @Schema(description = "")
  public List<BindingsEnum> getBindings() {
    return bindings;
  }

  public void setBindings(List<BindingsEnum> bindings) {
    this.bindings = bindings;
  }

  public SingleSignOnProfile enableSignatureValidationForArtifactBinding(Boolean enableSignatureValidationForArtifactBinding) {
    this.enableSignatureValidationForArtifactBinding = enableSignatureValidationForArtifactBinding;
    return this;
  }

   /**
   * Enables Signature validation for SAML Artifact Binding. Applicable only if SAML Artifact binding is enabled through the bindings option.
   * @return enableSignatureValidationForArtifactBinding
  **/
  @Schema(description = "Enables Signature validation for SAML Artifact Binding. Applicable only if SAML Artifact binding is enabled through the bindings option.")
  public Boolean isEnableSignatureValidationForArtifactBinding() {
    return enableSignatureValidationForArtifactBinding;
  }

  public void setEnableSignatureValidationForArtifactBinding(Boolean enableSignatureValidationForArtifactBinding) {
    this.enableSignatureValidationForArtifactBinding = enableSignatureValidationForArtifactBinding;
  }

   /**
   * Get attributeConsumingServiceIndex
   * @return attributeConsumingServiceIndex
  **/
  @Schema(description = "")
  public String getAttributeConsumingServiceIndex() {
    return attributeConsumingServiceIndex;
  }

  public SingleSignOnProfile enableIdpInitiatedSingleSignOn(Boolean enableIdpInitiatedSingleSignOn) {
    this.enableIdpInitiatedSingleSignOn = enableIdpInitiatedSingleSignOn;
    return this;
  }

   /**
   * Get enableIdpInitiatedSingleSignOn
   * @return enableIdpInitiatedSingleSignOn
  **/
  @Schema(description = "")
  public Boolean isEnableIdpInitiatedSingleSignOn() {
    return enableIdpInitiatedSingleSignOn;
  }

  public void setEnableIdpInitiatedSingleSignOn(Boolean enableIdpInitiatedSingleSignOn) {
    this.enableIdpInitiatedSingleSignOn = enableIdpInitiatedSingleSignOn;
  }

  public SingleSignOnProfile assertion(SAMLAssertionConfiguration assertion) {
    this.assertion = assertion;
    return this;
  }

   /**
   * Get assertion
   * @return assertion
  **/
  @Schema(description = "")
  public SAMLAssertionConfiguration getAssertion() {
    return assertion;
  }

  public void setAssertion(SAMLAssertionConfiguration assertion) {
    this.assertion = assertion;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SingleSignOnProfile singleSignOnProfile = (SingleSignOnProfile) o;
    return Objects.equals(this.bindings, singleSignOnProfile.bindings) &&
        Objects.equals(this.enableSignatureValidationForArtifactBinding, singleSignOnProfile.enableSignatureValidationForArtifactBinding) &&
        Objects.equals(this.attributeConsumingServiceIndex, singleSignOnProfile.attributeConsumingServiceIndex) &&
        Objects.equals(this.enableIdpInitiatedSingleSignOn, singleSignOnProfile.enableIdpInitiatedSingleSignOn) &&
        Objects.equals(this.assertion, singleSignOnProfile.assertion);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bindings, enableSignatureValidationForArtifactBinding, attributeConsumingServiceIndex, enableIdpInitiatedSingleSignOn, assertion);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SingleSignOnProfile {\n");
    
    sb.append("    bindings: ").append(toIndentedString(bindings)).append("\n");
    sb.append("    enableSignatureValidationForArtifactBinding: ").append(toIndentedString(enableSignatureValidationForArtifactBinding)).append("\n");
    sb.append("    attributeConsumingServiceIndex: ").append(toIndentedString(attributeConsumingServiceIndex)).append("\n");
    sb.append("    enableIdpInitiatedSingleSignOn: ").append(toIndentedString(enableIdpInitiatedSingleSignOn)).append("\n");
    sb.append("    assertion: ").append(toIndentedString(assertion)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
