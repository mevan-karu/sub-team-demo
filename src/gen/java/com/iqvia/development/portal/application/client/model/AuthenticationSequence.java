/*
 * WSO2 Identity Server - Application Management Rest API
 * This document specifies a **Application Management RESTful API** for **WSO2 Identity Server** . 
 *
 * OpenAPI spec version: v1
 * Contact: architecture@wso2.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.iqvia.development.portal.application.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.iqvia.development.portal.application.client.model.AuthenticationStepModel;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * AuthenticationSequence
 */


public class AuthenticationSequence {
  /**
   *  - DEFAULT type indicates that the application will use the default authentication sequence specified at the tenant level. When DEFAULT type is used the information given other fields of the AuthenticationSequence will be ignored and overriden with values defined at the tenant level. - USER_DEFINED type indicates that the application will use a user defined authentication sequence.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    DEFAULT("DEFAULT"),
    USER_DEFINED("USER_DEFINED");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = TypeEnum.DEFAULT;

  @SerializedName("steps")
  private List<AuthenticationStepModel> steps = null;

  @SerializedName("requestPathAuthenticators")
  private List<String> requestPathAuthenticators = null;

  @SerializedName("script")
  private String script = null;

  @SerializedName("subjectStepId")
  private Integer subjectStepId = 1;

  @SerializedName("attributeStepId")
  private Integer attributeStepId = 1;

  public AuthenticationSequence type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   *  - DEFAULT type indicates that the application will use the default authentication sequence specified at the tenant level. When DEFAULT type is used the information given other fields of the AuthenticationSequence will be ignored and overriden with values defined at the tenant level. - USER_DEFINED type indicates that the application will use a user defined authentication sequence.
   * @return type
  **/
  @Schema(description = " - DEFAULT type indicates that the application will use the default authentication sequence specified at the tenant level. When DEFAULT type is used the information given other fields of the AuthenticationSequence will be ignored and overriden with values defined at the tenant level. - USER_DEFINED type indicates that the application will use a user defined authentication sequence.")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public AuthenticationSequence steps(List<AuthenticationStepModel> steps) {
    this.steps = steps;
    return this;
  }

  public AuthenticationSequence addStepsItem(AuthenticationStepModel stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @Schema(description = "")
  public List<AuthenticationStepModel> getSteps() {
    return steps;
  }

  public void setSteps(List<AuthenticationStepModel> steps) {
    this.steps = steps;
  }

  public AuthenticationSequence requestPathAuthenticators(List<String> requestPathAuthenticators) {
    this.requestPathAuthenticators = requestPathAuthenticators;
    return this;
  }

  public AuthenticationSequence addRequestPathAuthenticatorsItem(String requestPathAuthenticatorsItem) {
    if (this.requestPathAuthenticators == null) {
      this.requestPathAuthenticators = new ArrayList<>();
    }
    this.requestPathAuthenticators.add(requestPathAuthenticatorsItem);
    return this;
  }

   /**
   * Get requestPathAuthenticators
   * @return requestPathAuthenticators
  **/
  @Schema(description = "")
  public List<String> getRequestPathAuthenticators() {
    return requestPathAuthenticators;
  }

  public void setRequestPathAuthenticators(List<String> requestPathAuthenticators) {
    this.requestPathAuthenticators = requestPathAuthenticators;
  }

  public AuthenticationSequence script(String script) {
    this.script = script;
    return this;
  }

   /**
   * Get script
   * @return script
  **/
  @Schema(description = "")
  public String getScript() {
    return script;
  }

  public void setScript(String script) {
    this.script = script;
  }

  public AuthenticationSequence subjectStepId(Integer subjectStepId) {
    this.subjectStepId = subjectStepId;
    return this;
  }

   /**
   * Get subjectStepId
   * @return subjectStepId
  **/
  @Schema(example = "1", description = "")
  public Integer getSubjectStepId() {
    return subjectStepId;
  }

  public void setSubjectStepId(Integer subjectStepId) {
    this.subjectStepId = subjectStepId;
  }

  public AuthenticationSequence attributeStepId(Integer attributeStepId) {
    this.attributeStepId = attributeStepId;
    return this;
  }

   /**
   * Get attributeStepId
   * @return attributeStepId
  **/
  @Schema(example = "1", description = "")
  public Integer getAttributeStepId() {
    return attributeStepId;
  }

  public void setAttributeStepId(Integer attributeStepId) {
    this.attributeStepId = attributeStepId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthenticationSequence authenticationSequence = (AuthenticationSequence) o;
    return Objects.equals(this.type, authenticationSequence.type) &&
        Objects.equals(this.steps, authenticationSequence.steps) &&
        Objects.equals(this.requestPathAuthenticators, authenticationSequence.requestPathAuthenticators) &&
        Objects.equals(this.script, authenticationSequence.script) &&
        Objects.equals(this.subjectStepId, authenticationSequence.subjectStepId) &&
        Objects.equals(this.attributeStepId, authenticationSequence.attributeStepId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, steps, requestPathAuthenticators, script, subjectStepId, attributeStepId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthenticationSequence {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    requestPathAuthenticators: ").append(toIndentedString(requestPathAuthenticators)).append("\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("    subjectStepId: ").append(toIndentedString(subjectStepId)).append("\n");
    sb.append("    attributeStepId: ").append(toIndentedString(attributeStepId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
