/*
 * WSO2 Identity Server - Application Management Rest API
 * This document specifies a **Application Management RESTful API** for **WSO2 Identity Server** . 
 *
 * OpenAPI spec version: v1
 * Contact: architecture@wso2.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.iqvia.development.portal.application.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.iqvia.development.portal.application.client.model.IdpInitiatedSingleLogout;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * SingleLogoutProfile
 */


public class SingleLogoutProfile {
  @SerializedName("enabled")
  private Boolean enabled = true;

  @SerializedName("logoutRequestUrl")
  private String logoutRequestUrl = null;

  @SerializedName("logoutResponseUrl")
  private String logoutResponseUrl = null;

  /**
   * Gets or Sets logoutMethod
   */
  @JsonAdapter(LogoutMethodEnum.Adapter.class)
  public enum LogoutMethodEnum {
    BACKCHANNEL("BACKCHANNEL"),
    FRONTCHANNEL_HTTP_REDIRECT("FRONTCHANNEL_HTTP_REDIRECT"),
    FRONTCHANNEL_HTTP_POST("FRONTCHANNEL_HTTP_POST");

    private String value;

    LogoutMethodEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static LogoutMethodEnum fromValue(String text) {
      for (LogoutMethodEnum b : LogoutMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<LogoutMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LogoutMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LogoutMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LogoutMethodEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("logoutMethod")
  private LogoutMethodEnum logoutMethod = null;

  @SerializedName("idpInitiatedSingleLogout")
  private IdpInitiatedSingleLogout idpInitiatedSingleLogout = null;

  public SingleLogoutProfile enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @Schema(description = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public SingleLogoutProfile logoutRequestUrl(String logoutRequestUrl) {
    this.logoutRequestUrl = logoutRequestUrl;
    return this;
  }

   /**
   * Single logout request accepting endpoint
   * @return logoutRequestUrl
  **/
  @Schema(description = "Single logout request accepting endpoint")
  public String getLogoutRequestUrl() {
    return logoutRequestUrl;
  }

  public void setLogoutRequestUrl(String logoutRequestUrl) {
    this.logoutRequestUrl = logoutRequestUrl;
  }

  public SingleLogoutProfile logoutResponseUrl(String logoutResponseUrl) {
    this.logoutResponseUrl = logoutResponseUrl;
    return this;
  }

   /**
   * Single logout response accepting endpoint
   * @return logoutResponseUrl
  **/
  @Schema(description = "Single logout response accepting endpoint")
  public String getLogoutResponseUrl() {
    return logoutResponseUrl;
  }

  public void setLogoutResponseUrl(String logoutResponseUrl) {
    this.logoutResponseUrl = logoutResponseUrl;
  }

  public SingleLogoutProfile logoutMethod(LogoutMethodEnum logoutMethod) {
    this.logoutMethod = logoutMethod;
    return this;
  }

   /**
   * Get logoutMethod
   * @return logoutMethod
  **/
  @Schema(description = "")
  public LogoutMethodEnum getLogoutMethod() {
    return logoutMethod;
  }

  public void setLogoutMethod(LogoutMethodEnum logoutMethod) {
    this.logoutMethod = logoutMethod;
  }

  public SingleLogoutProfile idpInitiatedSingleLogout(IdpInitiatedSingleLogout idpInitiatedSingleLogout) {
    this.idpInitiatedSingleLogout = idpInitiatedSingleLogout;
    return this;
  }

   /**
   * Get idpInitiatedSingleLogout
   * @return idpInitiatedSingleLogout
  **/
  @Schema(description = "")
  public IdpInitiatedSingleLogout getIdpInitiatedSingleLogout() {
    return idpInitiatedSingleLogout;
  }

  public void setIdpInitiatedSingleLogout(IdpInitiatedSingleLogout idpInitiatedSingleLogout) {
    this.idpInitiatedSingleLogout = idpInitiatedSingleLogout;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SingleLogoutProfile singleLogoutProfile = (SingleLogoutProfile) o;
    return Objects.equals(this.enabled, singleLogoutProfile.enabled) &&
        Objects.equals(this.logoutRequestUrl, singleLogoutProfile.logoutRequestUrl) &&
        Objects.equals(this.logoutResponseUrl, singleLogoutProfile.logoutResponseUrl) &&
        Objects.equals(this.logoutMethod, singleLogoutProfile.logoutMethod) &&
        Objects.equals(this.idpInitiatedSingleLogout, singleLogoutProfile.idpInitiatedSingleLogout);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enabled, logoutRequestUrl, logoutResponseUrl, logoutMethod, idpInitiatedSingleLogout);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SingleLogoutProfile {\n");
    
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    logoutRequestUrl: ").append(toIndentedString(logoutRequestUrl)).append("\n");
    sb.append("    logoutResponseUrl: ").append(toIndentedString(logoutResponseUrl)).append("\n");
    sb.append("    logoutMethod: ").append(toIndentedString(logoutMethod)).append("\n");
    sb.append("    idpInitiatedSingleLogout: ").append(toIndentedString(idpInitiatedSingleLogout)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
