/*
 * WSO2 Identity Server - Application Management Rest API
 * This document specifies a **Application Management RESTful API** for **WSO2 Identity Server** . 
 *
 * OpenAPI spec version: v1
 * Contact: architecture@wso2.org
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.iqvia.development.portal.application.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * OutboundProvisioningConfiguration
 */


public class OutboundProvisioningConfiguration {
  @SerializedName("idp")
  private String idp = null;

  @SerializedName("connector")
  private String connector = null;

  @SerializedName("blocking")
  private Boolean blocking = null;

  @SerializedName("rules")
  private Boolean rules = null;

  @SerializedName("jit")
  private Boolean jit = null;

  public OutboundProvisioningConfiguration idp(String idp) {
    this.idp = idp;
    return this;
  }

   /**
   * Get idp
   * @return idp
  **/
  @Schema(example = "Google", description = "")
  public String getIdp() {
    return idp;
  }

  public void setIdp(String idp) {
    this.idp = idp;
  }

  public OutboundProvisioningConfiguration connector(String connector) {
    this.connector = connector;
    return this;
  }

   /**
   * Get connector
   * @return connector
  **/
  @Schema(example = "googleapps", description = "")
  public String getConnector() {
    return connector;
  }

  public void setConnector(String connector) {
    this.connector = connector;
  }

  public OutboundProvisioningConfiguration blocking(Boolean blocking) {
    this.blocking = blocking;
    return this;
  }

   /**
   * Get blocking
   * @return blocking
  **/
  @Schema(example = "false", description = "")
  public Boolean isBlocking() {
    return blocking;
  }

  public void setBlocking(Boolean blocking) {
    this.blocking = blocking;
  }

  public OutboundProvisioningConfiguration rules(Boolean rules) {
    this.rules = rules;
    return this;
  }

   /**
   * Get rules
   * @return rules
  **/
  @Schema(example = "false", description = "")
  public Boolean isRules() {
    return rules;
  }

  public void setRules(Boolean rules) {
    this.rules = rules;
  }

  public OutboundProvisioningConfiguration jit(Boolean jit) {
    this.jit = jit;
    return this;
  }

   /**
   * Get jit
   * @return jit
  **/
  @Schema(example = "false", description = "")
  public Boolean isJit() {
    return jit;
  }

  public void setJit(Boolean jit) {
    this.jit = jit;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OutboundProvisioningConfiguration outboundProvisioningConfiguration = (OutboundProvisioningConfiguration) o;
    return Objects.equals(this.idp, outboundProvisioningConfiguration.idp) &&
        Objects.equals(this.connector, outboundProvisioningConfiguration.connector) &&
        Objects.equals(this.blocking, outboundProvisioningConfiguration.blocking) &&
        Objects.equals(this.rules, outboundProvisioningConfiguration.rules) &&
        Objects.equals(this.jit, outboundProvisioningConfiguration.jit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(idp, connector, blocking, rules, jit);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OutboundProvisioningConfiguration {\n");
    
    sb.append("    idp: ").append(toIndentedString(idp)).append("\n");
    sb.append("    connector: ").append(toIndentedString(connector)).append("\n");
    sb.append("    blocking: ").append(toIndentedString(blocking)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    jit: ").append(toIndentedString(jit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
